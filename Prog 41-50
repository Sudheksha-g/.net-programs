41. Find the Transpose of a Matrix

using System;

class MatrixTranspose
{
    static void Main()
    {
        Console.Write("Enter number of rows: ");
        int rows = int.Parse(Console.ReadLine());
        Console.Write("Enter number of columns: ");
        int cols = int.Parse(Console.ReadLine());

        int[,] matrix = new int[rows, cols];
        Console.WriteLine("Enter matrix elements:");
        for (int i = 0; i < rows; i++)
            for (int j = 0; j < cols; j++)
                matrix[i, j] = int.Parse(Console.ReadLine());

        Console.WriteLine("Transpose of the matrix:");
        for (int i = 0; i < cols; i++)
        {
            for (int j = 0; j < rows; j++)
                Console.Write(matrix[j, i] + " ");
            Console.WriteLine();
        }
    }
}

Output (example):

Enter number of rows: 2
Enter number of columns: 3
Enter matrix elements:
1
2
3
4
5
6
Transpose of the matrix:
1 4 
2 5 
3 6


---

42. Print Pyramid Pattern

using System;

class PyramidPattern
{
    static void Main()
    {
        Console.Write("Enter the number of rows: ");
        int rows = int.Parse(Console.ReadLine());

        for (int i = 1; i <= rows; i++)
        {
            Console.Write(new string(' ', rows - i));
            Console.WriteLine(new string('*', 2 * i - 1));
        }
    }
}

Output (example):

Enter the number of rows: 3
  *  
 *** 
*****


---

43. Check Prime Number

using System;

class PrimeCheck
{
    static void Main()
    {
        Console.Write("Enter a number: ");
        int num = int.Parse(Console.ReadLine());
        bool isPrime = num > 1;

        for (int i = 2; i <= Math.Sqrt(num); i++)
        {
            if (num % i == 0)
            {
                isPrime = false;
                break;
            }
        }

        Console.WriteLine(isPrime ? $"{num} is a prime number" : $"{num} is not a prime number");
    }
}

Output (example):

Enter a number: 11
11 is a prime number


---

44. Calculate the Power of a Number Without Using Built-in Function

using System;

class PowerCalculation
{
    static void Main()
    {
        Console.Write("Enter base: ");
        int baseNum = int.Parse(Console.ReadLine());
        Console.Write("Enter exponent: ");
        int exponent = int.Parse(Console.ReadLine());

        int result = 1;
        for (int i = 1; i <= exponent; i++)
            result *= baseNum;

        Console.WriteLine($"{baseNum}^{exponent} = {result}");
    }
}

Output (example):

Enter base: 2
Enter exponent: 3
2^3 = 8


---

45. Check if a String is Palindrome

using System;

class StringPalindrome
{
    static void Main()
    {
        Console.Write("Enter a string: ");
        string input = Console.ReadLine();
        string reversed = new string(input.Reverse().ToArray());

        Console.WriteLine(input == reversed ? "Palindrome" : "Not a Palindrome");
    }
}

Output (example):

Enter a string: madam
Palindrome


---

46. Calculate Sum of Natural Numbers Using Recursion

using System;

class SumOfNatural
{
    static int Sum(int n)
    {
        if (n == 0) return 0;
        return n + Sum(n - 1);
    }

    static void Main()
    {
        Console.Write("Enter a number: ");
        int num = int.Parse(Console.ReadLine());
        Console.WriteLine($"Sum of natural numbers: {Sum(num)}");
    }
}

Output (example):

Enter a number: 5
Sum of natural numbers: 15


---

47. Find Factorial Without Recursion

using System;

class FactorialWithoutRecursion
{
    static void Main()
    {
        Console.Write("Enter a number: ");
        int num = int.Parse(Console.ReadLine());
        int factorial = 1;

        for (int i = 1; i <= num; i++)
            factorial *= i;

        Console.WriteLine($"Factorial: {factorial}");
    }
}

Output (example):

Enter a number: 5
Factorial: 120


---

48. Check Perfect Square

using System;

class PerfectSquare
{
    static void Main()
    {
        Console.Write("Enter a number: ");
        int num = int.Parse(Console.ReadLine());

        int root = (int)Math.Sqrt(num);
        Console.WriteLine(root * root == num ? $"{num} is a Perfect Square" : $"{num} is not a Perfect Square");
    }
}

Output (example):

Enter a number: 16
16 is a Perfect Square


---

49. Count Digits in a Number

using System;

class DigitCount
{
    static void Main()
    {
        Console.Write("Enter a number: ");
        int num = int.Parse(Console.ReadLine());
        int count = 0;

        while (num > 0)
        {
            count++;
            num /= 10;
        }

        Console.WriteLine($"Number of digits: {count}");
    }
}

Output (example):

Enter a number: 12345
Number of digits: 5


---

50. Convert Decimal to Binary

using System;

class DecimalToBinary
{
    static void Main()
    {
        Console.Write("Enter a decimal number: ");
        int num = int.Parse(Console.ReadLine());
        string binary = "";

        while (num > 0)
        {
            binary = (num % 2) + binary;
            num /= 2;
        }

        Console.WriteLine($"Binary: {binary}");
    }
}

Output (example):

Enter a decimal number: 10
Binary: 1010
